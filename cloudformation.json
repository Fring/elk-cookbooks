{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description" : "fring cloud - Modular cf template - ELK Stack",

      "Mappings" : {
      "SubnetsMap" : {
        "subnetSBCa" : { "IPsuffix" : "24.128/28" },
        "subnetSBCb" : { "IPsuffix" : "24.144/28" },
        "subnetNATa" : { "IPsuffix" : "25.0/24" },
        "subnetNATb" : { "IPsuffix" : "26.0/24" },
        "subnetDBa" : { "IPsuffix" : "24.0/28" },
        "subnetDBb" : { "IPsuffix" : "24.16/28" },
        "subnetExtNODEa" : { "IPsuffix" : "24.160/28" },
        "subnetExtNODEb" : { "IPsuffix" : "24.176/28" },
        "subnetINTERNETa" : { "IPsuffix" : "27.0/24" },
        "subnetINTERNETb" : { "IPsuffix" : "28.0/24" },
        "VPCCIDR" : { "IPsuffix" : "24.0/21" }
	}
  },
    "Parameters": {
        "VpcId" : {
            "Type" : "String",
            "Description" : "VPC Id"
        },
     "vpcCIDRprefix" : {
	  "Description" : "Please enter the prefix of the desired VPC CIDR (for example - xxx.xxx or 172.20)",
	  "Type" : "String"
		},
        "DefaultSubnetId" : {
            "Type" : "String",
            "Description" : "AZ 1 subnet id"
        },
            "OfficeCIDR" : {
      "Type" : "String",
	  "Default":"10.10.0.0/16",
      "Description" : "The CIDR block for our office network (xxx.xxx.xxx.xxx/xx)"
    },
        "DefaultSshKeyName" : {
            "Type" : "String",
            "Description" : "The default ssh key name"
        }
    },
    "Resources": {
        "stack": {
            "Type": "AWS::OpsWorks::Stack",
            "Properties": {
                "Name": {
                    "Ref": "AWS::StackName"
                },
                "UseCustomCookbooks": "true",
                "CustomCookbooksSource": {
                    "Type": "git",
                    "Url": "https://github.com/Fring/elk-cookbooks.git"
                },
                "ChefConfiguration": {
                    "BerkshelfVersion": "3.1.3",
                    "ManageBerkshelf": true
                },
                "ConfigurationManager": {
                    "Name": "Chef",
                    "Version": "11.10"
                },
                "VpcId": {
                    "Ref": "VpcId"
                },
                "DefaultSubnetId": {
                    "Ref": "DefaultSubnetId"
                },
                "DefaultSshKeyName": {
                    "Ref": "DefaultSshKeyName"
                },
                "DefaultRootDeviceType": "ebs",
                "DefaultOs": "Amazon Linux 2015.03",
                "ServiceRoleArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:iam::",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":role/aws-opsworks-service-role"
                        ]
                    ]
                },
                "DefaultInstanceProfileArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:iam::",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":instance-profile/aws-opsworks-ec2-role"
                        ]
                    ]
                }
            }
        },
        "sgElasticsearchElb": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VpcId"
                },
                "GroupDescription": "Elasticsearch security group",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "-1",
                        "FromPort" : "-1",
                        "ToPort" : "-1",
                        "CidrIp": {"Fn::Join" : [".",[ { "Ref" : "vpcCIDRprefix" }, { "Fn::FindInMap" : [ "SubnetsMap", "VPCCIDR", "IPsuffix" ]}] ]}
                    },
                    {
                        "IpProtocol" : "-1",
                        "FromPort" : "-1",
                        "ToPort" : "-1",
                        "CidrIp": { "Ref" : "OfficeCIDR" }
                    }
                ],
                "SecurityGroupEgress" : [
                    {
                        "IpProtocol" : "-1",
                        "FromPort" : "-1",
                        "ToPort" : "-1",
                        "CidrIp" : "0.0.0.0/0"
                    }
                ]
            }
        },
       "sgElasticsearch": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VpcId"
                },
                "GroupDescription": "Elasticsearch security group",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "9200",
                        "ToPort" : "9300",
                        "CidrIp": {"Fn::Join" : [".",[ { "Ref" : "vpcCIDRprefix" }, { "Fn::FindInMap" : [ "SubnetsMap", "VPCCIDR", "IPsuffix" ]}] ]}
                    },
                    {
                        "IpProtocol" : "-1",
                        "FromPort" : "-1",
                        "ToPort" : "-1",
                        "SourceSecurityGroupId": {"Ref": "sgElasticsearchElb"}
                    }
                ],
                "SecurityGroupEgress" : [
                    {
                        "IpProtocol" : "-1",
                        "FromPort" : "0",
                        "ToPort" : "65535",
                        "CidrIp" : "0.0.0.0/0"
                    }
                ]
            }
        },
        "sgLogstash": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VpcId"
                },
                "GroupDescription": "Elasticsearch security group",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "-1",
                        "FromPort" : "-1",
                        "ToPort" : "-1",
                        "CidrIp": {"Fn::Join" : [".",[ { "Ref" : "vpcCIDRprefix" }, { "Fn::FindInMap" : [ "SubnetsMap", "VPCCIDR", "IPsuffix" ]}] ]}
                    }
                ],
                "SecurityGroupEgress" : [
                    {
                        "IpProtocol" : "-1",
                        "FromPort" : "-1",
                        "ToPort" : "-1",
                        "CidrIp" : "0.0.0.0/0"
                    }
                ]
            }
        },
        "sgKibana": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VpcId"
                },
                "GroupDescription": "Elasticsearch security group",
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort" : "80",
                        "ToPort" : "80",
                        "CidrIp": {"Fn::Join" : [".",[ { "Ref" : "vpcCIDRprefix" }, { "Fn::FindInMap" : [ "SubnetsMap", "VPCCIDR", "IPsuffix" ]}] ]}
                    },
                     {
                        "IpProtocol" : "-1",
                        "FromPort" : "-1",
                        "ToPort" : "-1",
                        "CidrIp": { "Ref" : "OfficeCIDR" }
                    }
                ],
                "SecurityGroupEgress" : [
                    {
                        "IpProtocol" : "-1",
                        "FromPort" : "-1",
                        "ToPort" : "-1",
                        "CidrIp" : "0.0.0.0/0"
                    }
                ]
            }
        },
        "elbElasticsearch": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Listeners": [
                    {
                        "LoadBalancerPort": "9200",
                        "InstancePort": "9200",
                        "Protocol": "HTTP"
                    },
                    {
                        "LoadBalancerPort": "9300",
                        "InstancePort": "9300",
                        "Protocol": "TCP"
                    }
                ],
                "HealthCheck": {
                    "Target": "HTTP:9200/_cluster/health",
                    "HealthyThreshold": "2",
                    "UnhealthyThreshold": "2",
                    "Interval": "10",
                    "Timeout": "2"
                },
                "SecurityGroups": [
                    {"Ref": "sgElasticsearchElb"}
                ],
                "Subnets": [
                    {"Ref": "DefaultSubnetId"}
                ],
                "Scheme": "internal",
                "CrossZone": true
            }
        },
        "roleElasticsearch": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version" : "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [ "ec2.amazonaws.com" ]
                            },
                            "Action": [ "sts:AssumeRole" ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "elasticsearch-aws-plugin",
                        "PolicyDocument": {
                            "Version" : "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "EC2:Describe*",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "profileElasticsearch": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {"Ref": "roleElasticsearch"}
                ]
            }
        },
        "layerElasticsearch": {
            "Type": "AWS::OpsWorks::Layer",
            "Properties": {
                "StackId": {
                    "Ref": "stack"
                },
                "Name": "Elasticsearch",
                "Type": "custom",
                "Shortname": "elasticsearch",
                "CustomRecipes": {
                    "Setup": [
                        "opsworks_elasticsearch"
                    ]
                },
                "EnableAutoHealing": "true",
                "AutoAssignElasticIps": "false",
                "AutoAssignPublicIps": "false",
                "VolumeConfigurations": [
                    {
                        "MountPoint": "/usr/local/var/data/elasticsearch",
                        "NumberOfDisks": 2,
                        "RaidLevel": 0,
                        "Size": 500
                    }
                ],
                "CustomSecurityGroupIds": [
                    {
                        "Fn::GetAtt": [
                            "sgElasticsearch",
                            "GroupId"
                        ]
                    }
                ],
                "CustomInstanceProfileArn": {
                    "Fn::GetAtt" : ["profileElasticsearch", "Arn"]
                }
            }
        },
        "layerElasticsearchElbAttachment" : {
            "Type" : "AWS::OpsWorks::ElasticLoadBalancerAttachment",
            "Properties" : {
                "ElasticLoadBalancerName" : { "Ref" : "elbElasticsearch" },
                "LayerId" : { "Ref" : "layerElasticsearch" }
            }
        },
        "layerKibana": {
            "Type": "AWS::OpsWorks::Layer",
            "Properties": {
                "StackId": {
                    "Ref": "stack"
                },
                "Name": "Kibana",
                "Type": "custom",
                "Shortname": "kibana",
                "CustomRecipes": {
                    "Setup": [
                        "opsworks_kibana"
                    ]
                },
                "EnableAutoHealing": "true",
                "AutoAssignElasticIps": "false",
                "AutoAssignPublicIps": "false",
                "CustomSecurityGroupIds": [
                    {
                        "Fn::GetAtt": [
                            "sgKibana",
                            "GroupId"
                        ]
                    }
                ]
            }
        },
        "layerLogstash": {
            "Type": "AWS::OpsWorks::Layer",
            "Properties": {
                "StackId": {
                    "Ref": "stack"
                },
                "Name": "Logstash",
                "Type": "custom",
                "Shortname": "logstash",
                "CustomRecipes": {
                    "Setup": [
                        "opsworks_logstash"
                    ]
                },
                "EnableAutoHealing": "true",
                "AutoAssignElasticIps": "false",
                "AutoAssignPublicIps": "false",
                "CustomSecurityGroupIds": [
                    {
                        "Fn::GetAtt": [
                            "sgLogstash",
                            "GroupId"
                        ]
                    }
                ]
            }
        }
    }
}
